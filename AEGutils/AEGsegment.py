#-*- coding:utf-8 -*-

from AEGagent import * 
from AEGinfo import *
from AEGcommon import *
from AEGconfig import *


AEG_GetStackRange_Str = '''
def GetStackRange():
	import subprocess
	proc = subprocess.Popen("cat /proc/"+str(pidof(p)).strip("[").strip("]")+"/maps" , shell=True, stdout = subprocess.PIPE , stderr = subprocess.PIPE)
	out = proc.communicate()[0]
	range_l , range_h = 0 , 0
	for line in out.split('\\n'):
		line = line.strip()
		if '[stack]' in line:
			_range = line.split(' ')[0]
			if not range_l:
				range_l = int(_range.split('-')[0].strip() , base = 16)
			range_h = int(_range.split('-')[1].strip() , base = 16)
	return range_l , range_h
'''

AEG_GetLibcRange_Str= '''

def GetLibcRange():
	import subprocess
	proc = subprocess.Popen("cat /proc/"+str(pidof(p)).strip("[").strip("]")+"/maps" , shell=True, stdout = subprocess.PIPE , stderr = subprocess.PIPE)
	out = proc.communicate()[0]
	range_l , range_h = 0 , 0
	for line in out.split('\\n'):
		line = line.strip()
		if 'libc' in line and '.so' in line:
			_range = line.split(' ')[0]
			if not range_l:
				range_l = int(_range.split('-')[0].strip() , base = 16)
			range_h = int(_range.split('-')[1].strip() , base = 16)
	return range_l , range_h
'''

def AEG_GetStackRange():
	'''
		栈地址的确定
		
	'''

	'''_gdb_script = 'start \nset logging file gdboutput.txt\nset logging on\np/x $%ssp\nset logging off' \
				% 'e'  if INFO_BITS == 32 else 'r'
	gdb_agent(_gdb_script)
	
	with open('gdboutput.txt' ,'r') as f:
		contents = f.read().strip()
		addr = int(contents.split('=')[2].strip() , base = 16)
		printf("Get Stack Range: addr = 0x%x" % addr , verbose=LOG_LEVEL_DEBUG)
		return addr & 0xfffffffffffff000 , (addr & 0xfffffffffffff000) + 0x1000 '''

	out = maps_agent()
	range_l , range_h = 0 , 0
	for line in out.split('\n'):
		line = line.strip()
		if '[stack]' in line:
			_range = line.split(' ')[0]
			if not range_l:
				range_l = int(_range.split('-')[0].strip() , base = 16)
			range_h = int(_range.split('-')[1].strip() , base = 16)
	return range_l , range_h


def AEG_GetLibcRange():
	'''
		获得libc的地址范围。
		使用查看maps的方法
	'''
	out = maps_agent()
	range_l , range_h = 0 , 0
	for line in out.split('\n'):
		line = line.strip()
		if 'libc' in line and '.so' in line:
			_range = line.split(' ')[0]
			if not range_l:
				range_l = int(_range.split('-')[0].strip() , base = 16)
			range_h = int(_range.split('-')[1].strip() , base = 16)
	return range_l , range_h
