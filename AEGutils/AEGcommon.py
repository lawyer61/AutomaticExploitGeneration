#-*- coding:utf-8 -*-
from AEGconfig import *
from AEGexceptions import NotImplementedException
import idc
import idautils	
def printf(_format='' , end = '\n' , verbose = AEG_LOG_LEVEL , output_to_file = False,print_caller = True):
	if AEG_LOG_FILE < verbose:
		return 
	

	'''if verbose >= LOG_LEVEL_DEBUG and  print_caller:
		output = __name__ + ' ' + str(_format)
	else:'''
	
	output = str(_format)
	
	output = LOG_PREFIX[verbose] + output

	if PYTHON_VERTION == 2:
		if end == '':
			print output , 
		else :
			output += str(end)
			print output
		if output_to_file:
			AEG_LOG_FILE.write(output)
	else :
		raise NotImplementedException("\n\nPython version not implement")

def AEG_GetCodeXrefsTo(addr , flow = 1):
	'''
	对于一个地址，返回针对引用到该地址的指令(仅限代码段)

	@flow : 是否使用正常的流分析
	'''
	return idautils.CodeRefsTo(addr , flow)

def AEG_save_file(filename , content , mode = "w"):
	'''
	保存至文件，比如shellcode，输出等
	'''

	with open(filename,  mode) as f:
		f.write(content)